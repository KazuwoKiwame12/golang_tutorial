// Code generated by MockGen. DO NOT EDIT.
// Source: api.go

// Package mock_formock is a generated GoMock package.
package mock_formock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFormValidater is a mock of FormValidater interface.
type MockFormValidater struct {
	ctrl     *gomock.Controller
	recorder *MockFormValidaterMockRecorder
}

// MockFormValidaterMockRecorder is the mock recorder for MockFormValidater.
type MockFormValidaterMockRecorder struct {
	mock *MockFormValidater
}

// NewMockFormValidater creates a new mock instance.
func NewMockFormValidater(ctrl *gomock.Controller) *MockFormValidater {
	mock := &MockFormValidater{ctrl: ctrl}
	mock.recorder = &MockFormValidaterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFormValidater) EXPECT() *MockFormValidaterMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockFormValidater) Validate(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Validate indicates an expected call of Validate.
func (mr *MockFormValidaterMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockFormValidater)(nil).Validate), arg0)
}
